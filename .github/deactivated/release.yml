name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Release Please
        id: release
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445
        with:
          release-type: rust
          # package-name: sprout # This input is deprecated for release-type: rust
          # Optional: Define a custom token if needed, though default GITHUB_TOKEN often works.
          token: ${{ secrets.GITHUB_TOKEN }}
          # Optional: If you want release-please to create a PR instead of releasing directly
          # command: release-pr
          # Optional: If you want to include a manifest file (e.g. for cargo-dist)
          # manifest-file: .manifest.json

  # This job runs after a release has been created by release-please
  # (either directly or after a release PR is merged).
  # It builds the binaries and uploads them as release assets.
  build-and-upload-assets:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name_suffix: linux-x86_64
            binary_name: sprout
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name_suffix: macos-x86_64
            binary_name: sprout
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name_suffix: macos-aarch64
            binary_name: sprout
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name_suffix: windows-x86_64
            binary_name: sprout.exe
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Checkout the specific tag created by release-please
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_TERM_COLOR: always

      - name: Prepare asset name
        id: asset_details
        run: |
          VERSION_TAG="${{ needs.release-please.outputs.tag_name }}"
          # Remove 'v' prefix if present (e.g., v0.1.0 -> 0.1.0)
          VERSION="${VERSION_TAG#v}"
          ASSET_NAME="sprout-v${VERSION}-${{ matrix.asset_name_suffix }}"
          echo "ASSET_NAME=${ASSET_NAME}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT


      - name: Upload Release Asset (Linux/macOS)
        if: runner.os != 'Windows'
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-please.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.binary_name }}
          asset_name: ${{ steps.asset_details.outputs.ASSET_NAME }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-please.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.binary_name }}
          asset_name: ${{ steps.asset_details.outputs.ASSET_NAME }}.exe # Ensure .exe for Windows asset name if binary_name doesn't include it
          asset_content_type: application/octet-stream